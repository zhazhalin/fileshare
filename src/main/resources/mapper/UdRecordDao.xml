<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhang.fileshare.dao.UdRecordDao">

    <resultMap type="com.zhang.fileshare.entity.UdRecord" id="UdRecordMap">
        <result property="udId" column="UD_id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="fileId" column="file_id" jdbcType="INTEGER"/>
        <result property="createtime" column="createTime" jdbcType="TIMESTAMP"/>
        <result property="option" column="option" jdbcType="INTEGER"/>
        <result property="isShare" column="is_share" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UdRecordMap">
        select
          UD_id, user_id, file_id, createTime, UD_record.option, is_share
        from UD_record
        where UD_id = #{udId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UdRecordMap">
        select
          UD_id, user_id, file_id, createTime, UD_record.option, is_share
        from UD_record
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UdRecordMap">
        select
        UD_id, user_id, file_id, createTime, UD_record.option, is_share
        from UD_record
        <where>
            <if test="udId != null">
                and UD_id = #{udId}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="fileId != null">
                and file_id = #{fileId}
            </if>
            <if test="createtime != null">
                and createTime = #{createtime}
            </if>
            <if test="option != null">
                and option = #{option}
            </if>
            <if test="isShare != null and isShare != ''">
                and is_share = #{isShare}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="udId" useGeneratedKeys="true">
        insert into UD_record(user_id, file_id, createTime, UD_record.option, is_share)
        values (#{userId}, #{fileId}, #{createtime}, #{option}, #{isShare})
    </insert>

    <insert id="insertBatch" keyProperty="udId" useGeneratedKeys="true">
        insert into UD_record(user_id, file_id, createTime, UD_record.option, is_share)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.fileId}, #{entity.createtime}, #{entity.option}, #{entity.isShare})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="udId" useGeneratedKeys="true">
        insert into UD_record(user_id, file_id, createTime, UD_record.option, is_share)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.fileId}, #{entity.createtime}, #{entity.option}, #{entity.isShare})
        </foreach>
        on duplicate key update
        user_id = values(user_id) , file_id = values(file_id) , createTime = values(createTime) , option =
        values(option) , is_share = values(is_share)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update UD_record
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="fileId != null">
                file_id = #{fileId},
            </if>
            <if test="createtime != null">
                createTime = #{createtime},
            </if>
            <if test="option != null">
                option = #{option},
            </if>
            <if test="isShare != null and isShare != ''">
                is_share = #{isShare},
            </if>
        </set>
        where UD_id = #{udId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from UD_record where UD_id = #{udId}
    </delete>

</mapper>

